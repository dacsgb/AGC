<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.8.10"/>
<title>VectorNav C++ Library: vn::protocol::uart::Packet Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="search/searchdata.js"></script>
<script type="text/javascript" src="search/search.js"></script>
<script type="text/javascript">
  $(document).ready(function() { init_search(); });
</script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectlogo"><img alt="Logo" src="proglib.png"/></td>
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">VectorNav C++ Library
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.8.10 -->
<script type="text/javascript">
var searchBox = new SearchBox("searchBox", "search",false,'Search');
</script>
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.html"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li class="current"><a href="annotated.html"><span>Classes</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
      <li><a href="examples.html"><span>Examples</span></a></li>
      <li>
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="annotated.html"><span>Class&#160;List</span></a></li>
      <li><a href="classes.html"><span>Class&#160;Index</span></a></li>
      <li><a href="hierarchy.html"><span>Class&#160;Hierarchy</span></a></li>
      <li><a href="functions.html"><span>Class&#160;Members</span></a></li>
    </ul>
  </div>
<!-- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
</div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="javascript:void(0)" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>vn</b></li><li class="navelem"><b>protocol</b></li><li class="navelem"><b>uart</b></li><li class="navelem"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html">Packet</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pub-static-attribs">Static Public Attributes</a> &#124;
<a href="structvn_1_1protocol_1_1uart_1_1_packet-members.html">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">vn::protocol::uart::Packet Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">

<p>Structure representing a UART packet received from the VectorNav sensor.  
 <a href="structvn_1_1protocol_1_1uart_1_1_packet.html#details">More...</a></p>

<p><code>#include &lt;<a class="el" href="packet_8h_source.html">packet.h</a>&gt;</code></p>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:ab12e361c05cfb93a80bff21a69ccac30"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#ab12e361c05cfb93a80bff21a69ccac30">Type</a> { <a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#ab12e361c05cfb93a80bff21a69ccac30a38e391e6fd94db9f720be7a1cd2ac838">TYPE_UNKNOWN</a>, 
<a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#ab12e361c05cfb93a80bff21a69ccac30a259782d1109faf2b93eb8fffd37fc8b2">TYPE_BINARY</a>, 
<a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#ab12e361c05cfb93a80bff21a69ccac30a16b4e42d7a654e579902e1041c9c9d89">TYPE_ASCII</a>
 }<tr class="memdesc:ab12e361c05cfb93a80bff21a69ccac30"><td class="mdescLeft">&#160;</td><td class="mdescRight">The different types of UART packets.  <a href="structvn_1_1protocol_1_1uart_1_1_packet.html#ab12e361c05cfb93a80bff21a69ccac30">More...</a><br /></td></tr>
<tr class="separator:ab12e361c05cfb93a80bff21a69ccac30"><td class="memSeparator" colspan="2">&#160;</td></tr>
</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aaafb41facc3d95a334a682b3c7e8fb78"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#aaafb41facc3d95a334a682b3c7e8fb78">Packet</a> (char const *packet, size_t length)</td></tr>
<tr class="memdesc:aaafb41facc3d95a334a682b3c7e8fb78"><td class="mdescLeft">&#160;</td><td class="mdescRight">Creates a new packet based on the provided packet data buffer. A full packet is expected which contains the deliminators (i.e. "$VNRRG,1*XX\r\n").  <a href="#aaafb41facc3d95a334a682b3c7e8fb78">More...</a><br /></td></tr>
<tr class="separator:aaafb41facc3d95a334a682b3c7e8fb78"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ab37db1bb0cee1c69b84ea0a743af2a"><td class="memItemLeft" align="right" valign="top"><a class="anchor" id="a7ab37db1bb0cee1c69b84ea0a743af2a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>Packet</b> (std::string packet)</td></tr>
<tr class="separator:a7ab37db1bb0cee1c69b84ea0a743af2a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8272b54b0c9a682a237dd052016c1d7e"><td class="memItemLeft" align="right" valign="top">&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a8272b54b0c9a682a237dd052016c1d7e">Packet</a> (const <a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html">Packet</a> &amp;toCopy)</td></tr>
<tr class="memdesc:a8272b54b0c9a682a237dd052016c1d7e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Copy constructor.  <a href="#a8272b54b0c9a682a237dd052016c1d7e">More...</a><br /></td></tr>
<tr class="separator:a8272b54b0c9a682a237dd052016c1d7e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93d3f784c816ed45ee3f4ba3d301b52d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html">Packet</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a93d3f784c816ed45ee3f4ba3d301b52d">operator=</a> (const <a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html">Packet</a> &amp;from)</td></tr>
<tr class="memdesc:a93d3f784c816ed45ee3f4ba3d301b52d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Assignment operator.  <a href="#a93d3f784c816ed45ee3f4ba3d301b52d">More...</a><br /></td></tr>
<tr class="separator:a93d3f784c816ed45ee3f4ba3d301b52d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a22baeca6d0c54c143e3d07b8e30571c8"><td class="memItemLeft" align="right" valign="top">std::string&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a22baeca6d0c54c143e3d07b8e30571c8">datastr</a> ()</td></tr>
<tr class="memdesc:a22baeca6d0c54c143e3d07b8e30571c8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the encapsulated data as a string.  <a href="#a22baeca6d0c54c143e3d07b8e30571c8">More...</a><br /></td></tr>
<tr class="separator:a22baeca6d0c54c143e3d07b8e30571c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a673e63cf13227931bc6c1309b47bbc7c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#ab12e361c05cfb93a80bff21a69ccac30">Type</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a673e63cf13227931bc6c1309b47bbc7c">type</a> ()</td></tr>
<tr class="memdesc:a673e63cf13227931bc6c1309b47bbc7c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the type of packet.  <a href="#a673e63cf13227931bc6c1309b47bbc7c">More...</a><br /></td></tr>
<tr class="separator:a673e63cf13227931bc6c1309b47bbc7c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99645c96c53eee65d84def3a39a4239f"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a99645c96c53eee65d84def3a39a4239f">isValid</a> ()</td></tr>
<tr class="memdesc:a99645c96c53eee65d84def3a39a4239f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Performs data integrity check on the data packet.  <a href="#a99645c96c53eee65d84def3a39a4239f">More...</a><br /></td></tr>
<tr class="separator:a99645c96c53eee65d84def3a39a4239f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a526fbedc50f063405118cc5890fbcb0b"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a526fbedc50f063405118cc5890fbcb0b">isError</a> ()</td></tr>
<tr class="memdesc:a526fbedc50f063405118cc5890fbcb0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the packet is an ASCII error message.  <a href="#a526fbedc50f063405118cc5890fbcb0b">More...</a><br /></td></tr>
<tr class="separator:a526fbedc50f063405118cc5890fbcb0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d5948d6bec2ce409f533e1e89bd46d4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a7d5948d6bec2ce409f533e1e89bd46d4">isResponse</a> ()</td></tr>
<tr class="memdesc:a7d5948d6bec2ce409f533e1e89bd46d4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the packet is a response to a message sent to the sensor.  <a href="#a7d5948d6bec2ce409f533e1e89bd46d4">More...</a><br /></td></tr>
<tr class="separator:a7d5948d6bec2ce409f533e1e89bd46d4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a86c26ef2939346c3c1ccdb70176bbe42"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a86c26ef2939346c3c1ccdb70176bbe42">isAsciiAsync</a> ()</td></tr>
<tr class="memdesc:a86c26ef2939346c3c1ccdb70176bbe42"><td class="mdescLeft">&#160;</td><td class="mdescRight">Indicates if the packet is an ASCII asynchronous message.  <a href="#a86c26ef2939346c3c1ccdb70176bbe42">More...</a><br /></td></tr>
<tr class="separator:a86c26ef2939346c3c1ccdb70176bbe42"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac35580a613fcb4677b31bde124787f5"><td class="memItemLeft" align="right" valign="top">AsciiAsync&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#aac35580a613fcb4677b31bde124787f5">determineAsciiAsyncType</a> ()</td></tr>
<tr class="memdesc:aac35580a613fcb4677b31bde124787f5"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines the type of ASCII asynchronous message this packet is.  <a href="#aac35580a613fcb4677b31bde124787f5">More...</a><br /></td></tr>
<tr class="separator:aac35580a613fcb4677b31bde124787f5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afa1df5ba1214f4359a3b3b0d02446f0a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#afa1df5ba1214f4359a3b3b0d02446f0a">isCompatible</a> (CommonGroup commonGroup, TimeGroup timeGroup, ImuGroup imuGroup, GpsGroup gpsGroup, AttitudeGroup attitudeGroup, InsGroup insGroup)</td></tr>
<tr class="memdesc:afa1df5ba1214f4359a3b3b0d02446f0a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Determines if the packet is a compatible match for an expected binary output message type.  <a href="#afa1df5ba1214f4359a3b3b0d02446f0a">More...</a><br /></td></tr>
<tr class="separator:afa1df5ba1214f4359a3b3b0d02446f0a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a018e534f5007b9313264ee7f270ce177"><td class="memItemLeft" align="right" valign="top">SensorError&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a018e534f5007b9313264ee7f270ce177">parseError</a> ()</td></tr>
<tr class="memdesc:a018e534f5007b9313264ee7f270ce177"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses an error packet to get the error type.  <a href="#a018e534f5007b9313264ee7f270ce177">More...</a><br /></td></tr>
<tr class="separator:a018e534f5007b9313264ee7f270ce177"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a99c13737b4fe264848bee2d499231842"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a99c13737b4fe264848bee2d499231842">groups</a> ()</td></tr>
<tr class="memdesc:a99c13737b4fe264848bee2d499231842"><td class="mdescLeft">&#160;</td><td class="mdescRight">If the packet is a binary message, this will return the groups field.  <a href="#a99c13737b4fe264848bee2d499231842">More...</a><br /></td></tr>
<tr class="separator:a99c13737b4fe264848bee2d499231842"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d067aed8efc54ff8846b2e634a3b947"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structvn_1_1protocol_1_1uart_1_1_packet.html#a7d067aed8efc54ff8846b2e634a3b947">groupField</a> (size_t index)</td></tr>
<tr class="memdesc:a7d067aed8efc54ff8846b2e634a3b947"><td class="mdescLeft">&#160;</td><td class="mdescRight">This will return the requested group field of a binary packet at the specified index.  <a href="#a7d067aed8efc54ff8846b2e634a3b947">More...</a><br /></td></tr>
<tr class="separator:a7d067aed8efc54ff8846b2e634a3b947"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4b7d5064ba2b58c727639ff4aa93bc38"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga4b7d5064ba2b58c727639ff4aa93bc38">extractUint8</a> ()</td></tr>
<tr class="memdesc:ga4b7d5064ba2b58c727639ff4aa93bc38"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a uint8_t data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga4b7d5064ba2b58c727639ff4aa93bc38">More...</a><br /></td></tr>
<tr class="separator:ga4b7d5064ba2b58c727639ff4aa93bc38"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga508310a53f9319039400a1dcbe57726c"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga508310a53f9319039400a1dcbe57726c">extractInt8</a> ()</td></tr>
<tr class="memdesc:ga508310a53f9319039400a1dcbe57726c"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a int8_t data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga508310a53f9319039400a1dcbe57726c">More...</a><br /></td></tr>
<tr class="separator:ga508310a53f9319039400a1dcbe57726c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga53b466a4472b4fb4aadb8f5d85129158"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga53b466a4472b4fb4aadb8f5d85129158">extractUint16</a> ()</td></tr>
<tr class="memdesc:ga53b466a4472b4fb4aadb8f5d85129158"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a uint16_t data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga53b466a4472b4fb4aadb8f5d85129158">More...</a><br /></td></tr>
<tr class="separator:ga53b466a4472b4fb4aadb8f5d85129158"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4fd32b5b9d0ac2524b9c40c6306d7c1b"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga4fd32b5b9d0ac2524b9c40c6306d7c1b">extractUint32</a> ()</td></tr>
<tr class="memdesc:ga4fd32b5b9d0ac2524b9c40c6306d7c1b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a uint32_t data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga4fd32b5b9d0ac2524b9c40c6306d7c1b">More...</a><br /></td></tr>
<tr class="separator:ga4fd32b5b9d0ac2524b9c40c6306d7c1b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4792b2e7cd05e47792c8eda1402f521a"><td class="memItemLeft" align="right" valign="top">uint64_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga4792b2e7cd05e47792c8eda1402f521a">extractUint64</a> ()</td></tr>
<tr class="memdesc:ga4792b2e7cd05e47792c8eda1402f521a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a uint64_t data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga4792b2e7cd05e47792c8eda1402f521a">More...</a><br /></td></tr>
<tr class="separator:ga4792b2e7cd05e47792c8eda1402f521a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab0b5a57c57115fdb9c9d16dd2ab8e0d8"><td class="memItemLeft" align="right" valign="top">float&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#gab0b5a57c57115fdb9c9d16dd2ab8e0d8">extractFloat</a> ()</td></tr>
<tr class="memdesc:gab0b5a57c57115fdb9c9d16dd2ab8e0d8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a float fdata type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#gab0b5a57c57115fdb9c9d16dd2ab8e0d8">More...</a><br /></td></tr>
<tr class="separator:gab0b5a57c57115fdb9c9d16dd2ab8e0d8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9d966dba94a885948aa1c734a76f12f6"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga9d966dba94a885948aa1c734a76f12f6">extractVec3f</a> ()</td></tr>
<tr class="memdesc:ga9d966dba94a885948aa1c734a76f12f6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a vec3f data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga9d966dba94a885948aa1c734a76f12f6">More...</a><br /></td></tr>
<tr class="separator:ga9d966dba94a885948aa1c734a76f12f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8388f5c2c119de030687db30a50c9e34"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3d</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga8388f5c2c119de030687db30a50c9e34">extractVec3d</a> ()</td></tr>
<tr class="memdesc:ga8388f5c2c119de030687db30a50c9e34"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a vec3d data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga8388f5c2c119de030687db30a50c9e34">More...</a><br /></td></tr>
<tr class="separator:ga8388f5c2c119de030687db30a50c9e34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4cce541ec4161a807868cae7038f616a"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec4f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#ga4cce541ec4161a807868cae7038f616a">extractVec4f</a> ()</td></tr>
<tr class="memdesc:ga4cce541ec4161a807868cae7038f616a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extracts a vec4f data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#ga4cce541ec4161a807868cae7038f616a">More...</a><br /></td></tr>
<tr class="separator:ga4cce541ec4161a807868cae7038f616a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaac9297898b71804cc1bbd50c6fbbd274"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structvn_1_1math_1_1mat.html">vn::math::mat3f</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_binary_extractors.html#gaac9297898b71804cc1bbd50c6fbbd274">extractMat3f</a> ()</td></tr>
<tr class="memdesc:gaac9297898b71804cc1bbd50c6fbbd274"><td class="mdescLeft">&#160;</td><td class="mdescRight">Extract a mat3f data type from a binary packet and advances the next extraction point appropriately.  <a href="group__uart_packet_binary_extractors.html#gaac9297898b71804cc1bbd50c6fbbd274">More...</a><br /></td></tr>
<tr class="separator:gaac9297898b71804cc1bbd50c6fbbd274"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga735d308e88a91038631d1bad57cdaa26"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga735d308e88a91038631d1bad57cdaa26">parseVNYPR</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *yawPitchRoll)</td></tr>
<tr class="memdesc:ga735d308e88a91038631d1bad57cdaa26"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNYPR asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga735d308e88a91038631d1bad57cdaa26">More...</a><br /></td></tr>
<tr class="separator:ga735d308e88a91038631d1bad57cdaa26"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaad75c71757a4a499112a07d36930b72f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#gaad75c71757a4a499112a07d36930b72f">parseVNQTN</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec4f</a> *quaternion)</td></tr>
<tr class="memdesc:gaad75c71757a4a499112a07d36930b72f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNQTN asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#gaad75c71757a4a499112a07d36930b72f">More...</a><br /></td></tr>
<tr class="separator:gaad75c71757a4a499112a07d36930b72f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac2600b428c7ebc0ee1bf9995dbdbc268"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#gac2600b428c7ebc0ee1bf9995dbdbc268">parseVNQMR</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec4f</a> *quaternion, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *magnetic, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *acceleration, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:gac2600b428c7ebc0ee1bf9995dbdbc268"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNQMR asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#gac2600b428c7ebc0ee1bf9995dbdbc268">More...</a><br /></td></tr>
<tr class="separator:gac2600b428c7ebc0ee1bf9995dbdbc268"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga00d9a1035d59fdb5b3f88630c8274b4a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga00d9a1035d59fdb5b3f88630c8274b4a">parseVNMAG</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *magnetic)</td></tr>
<tr class="memdesc:ga00d9a1035d59fdb5b3f88630c8274b4a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNMAG asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga00d9a1035d59fdb5b3f88630c8274b4a">More...</a><br /></td></tr>
<tr class="separator:ga00d9a1035d59fdb5b3f88630c8274b4a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2c73f94ec7be3a5fb90d7191c8b9581a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga2c73f94ec7be3a5fb90d7191c8b9581a">parseVNACC</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *acceleration)</td></tr>
<tr class="memdesc:ga2c73f94ec7be3a5fb90d7191c8b9581a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNACC asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga2c73f94ec7be3a5fb90d7191c8b9581a">More...</a><br /></td></tr>
<tr class="separator:ga2c73f94ec7be3a5fb90d7191c8b9581a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga25c4fb9f696c2154ac8d5531e7d2a67f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga25c4fb9f696c2154ac8d5531e7d2a67f">parseVNGYR</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:ga25c4fb9f696c2154ac8d5531e7d2a67f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNGYR asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga25c4fb9f696c2154ac8d5531e7d2a67f">More...</a><br /></td></tr>
<tr class="separator:ga25c4fb9f696c2154ac8d5531e7d2a67f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafe2501d1d9b7f5fbd30f3d792271e751"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#gafe2501d1d9b7f5fbd30f3d792271e751">parseVNMAR</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *magnetic, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *acceleration, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:gafe2501d1d9b7f5fbd30f3d792271e751"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNMAR asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#gafe2501d1d9b7f5fbd30f3d792271e751">More...</a><br /></td></tr>
<tr class="separator:gafe2501d1d9b7f5fbd30f3d792271e751"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3b96b423fc20c6d8175d037b92df0ac3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga3b96b423fc20c6d8175d037b92df0ac3">parseVNYMR</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *yawPitchRoll, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *magnetic, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *acceleration, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:ga3b96b423fc20c6d8175d037b92df0ac3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNYMR asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga3b96b423fc20c6d8175d037b92df0ac3">More...</a><br /></td></tr>
<tr class="separator:ga3b96b423fc20c6d8175d037b92df0ac3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9ac5a34ece35801ce9933b8e499ab45f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga9ac5a34ece35801ce9933b8e499ab45f">parseVNYBA</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *yawPitchRoll, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accelerationBody, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:ga9ac5a34ece35801ce9933b8e499ab45f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNYBA asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga9ac5a34ece35801ce9933b8e499ab45f">More...</a><br /></td></tr>
<tr class="separator:ga9ac5a34ece35801ce9933b8e499ab45f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1916d7b07a37646f74ade9ead3a41daf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga1916d7b07a37646f74ade9ead3a41daf">parseVNYIA</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *yawPitchRoll, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accelerationInertial, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:ga1916d7b07a37646f74ade9ead3a41daf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNYIA asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga1916d7b07a37646f74ade9ead3a41daf">More...</a><br /></td></tr>
<tr class="separator:ga1916d7b07a37646f74ade9ead3a41daf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9fe8ca2bbde10d209fc871c53e184faf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga9fe8ca2bbde10d209fc871c53e184faf">parseVNIMU</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *magneticUncompensated, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accelerationUncompensated, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRateUncompensated, float *temperature, float *pressure)</td></tr>
<tr class="memdesc:ga9fe8ca2bbde10d209fc871c53e184faf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNIMU asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga9fe8ca2bbde10d209fc871c53e184faf">More...</a><br /></td></tr>
<tr class="separator:ga9fe8ca2bbde10d209fc871c53e184faf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaa1a12b4a92353242295e6719016e514"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#gaaa1a12b4a92353242295e6719016e514">parseVNGPS</a> (double *time, uint16_t *week, uint8_t *gpsFix, uint8_t *numSats, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3d</a> *lla, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *nedVel, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *nedAcc, float *speedAcc, float *timeAcc)</td></tr>
<tr class="memdesc:gaaa1a12b4a92353242295e6719016e514"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNGPS asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#gaaa1a12b4a92353242295e6719016e514">More...</a><br /></td></tr>
<tr class="separator:gaaa1a12b4a92353242295e6719016e514"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaaacddd1841aef766ea8ecaad87a13779"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#gaaacddd1841aef766ea8ecaad87a13779">parseVNINS</a> (double *time, uint16_t *week, uint16_t *status, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *yawPitchRoll, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3d</a> *lla, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *nedVel, float *attUncertainty, float *posUncertainty, float *velUncertainty)</td></tr>
<tr class="memdesc:gaaacddd1841aef766ea8ecaad87a13779"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNINS asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#gaaacddd1841aef766ea8ecaad87a13779">More...</a><br /></td></tr>
<tr class="separator:gaaacddd1841aef766ea8ecaad87a13779"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga6e544525ce803697bcef5ce5fc7818d1"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga6e544525ce803697bcef5ce5fc7818d1">parseVNINE</a> (double *time, uint16_t *week, uint16_t *status, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *ypr, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3d</a> *position, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *velocity, float *attUncertainty, float *posUncertainty, float *velUncertainty)</td></tr>
<tr class="memdesc:ga6e544525ce803697bcef5ce5fc7818d1"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNINE asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga6e544525ce803697bcef5ce5fc7818d1">More...</a><br /></td></tr>
<tr class="separator:ga6e544525ce803697bcef5ce5fc7818d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa0d3bfeb2dfd550107907a05bdd4efaf"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#gaa0d3bfeb2dfd550107907a05bdd4efaf">parseVNISL</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *ypr, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3d</a> *lla, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *velocity, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *acceleration, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:gaa0d3bfeb2dfd550107907a05bdd4efaf"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNISL asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#gaa0d3bfeb2dfd550107907a05bdd4efaf">More...</a><br /></td></tr>
<tr class="separator:gaa0d3bfeb2dfd550107907a05bdd4efaf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga48dcf315aaafb5314ec2835e6fbeda3d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga48dcf315aaafb5314ec2835e6fbeda3d">parseVNISE</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *ypr, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3d</a> *position, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *velocity, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *acceleration, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRate)</td></tr>
<tr class="memdesc:ga48dcf315aaafb5314ec2835e6fbeda3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNISE asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga48dcf315aaafb5314ec2835e6fbeda3d">More...</a><br /></td></tr>
<tr class="separator:ga48dcf315aaafb5314ec2835e6fbeda3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf743275568f2627482e26d143be5f50e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#gaf743275568f2627482e26d143be5f50e">parseVNGPE</a> (double *tow, uint16_t *week, uint8_t *gpsFix, uint8_t *numSats, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3d</a> *position, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *velocity, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *posAcc, float *speedAcc, float *timeAcc)</td></tr>
<tr class="memdesc:gaf743275568f2627482e26d143be5f50e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNGPE asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#gaf743275568f2627482e26d143be5f50e">More...</a><br /></td></tr>
<tr class="separator:gaf743275568f2627482e26d143be5f50e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga4217dcca529c1849323deab9aff15539"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_packet_ascii_async_parsers.html#ga4217dcca529c1849323deab9aff15539">parseVNDTV</a> (float *deltaTime, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *deltaTheta, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *deltaVelocity)</td></tr>
<tr class="memdesc:ga4217dcca529c1849323deab9aff15539"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a VNDTV asynchronous packet.  <a href="group__uart_packet_ascii_async_parsers.html#ga4217dcca529c1849323deab9aff15539">More...</a><br /></td></tr>
<tr class="separator:ga4217dcca529c1849323deab9aff15539"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga96926d5db1ba6a3b7f62f1a147bd2561"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga96926d5db1ba6a3b7f62f1a147bd2561">parseBinaryOutput</a> (uint16_t *asyncMode, uint16_t *rateDivisor, uint16_t *outputGroup, uint16_t *commonField, uint16_t *timeField, uint16_t *imuField, uint16_t *gpsField, uint16_t *attitudeField, uint16_t *insField)</td></tr>
<tr class="memdesc:ga96926d5db1ba6a3b7f62f1a147bd2561"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading any of the Binary Output registers.  <a href="group__uart_ascii_response_parsers.html#ga96926d5db1ba6a3b7f62f1a147bd2561">More...</a><br /></td></tr>
<tr class="separator:ga96926d5db1ba6a3b7f62f1a147bd2561"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf30f5f63600dcbdbca7d2194c9a85be6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gaf30f5f63600dcbdbca7d2194c9a85be6">parseUserTag</a> (char *tag)</td></tr>
<tr class="memdesc:gaf30f5f63600dcbdbca7d2194c9a85be6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the User Tag register.  <a href="group__uart_ascii_response_parsers.html#gaf30f5f63600dcbdbca7d2194c9a85be6">More...</a><br /></td></tr>
<tr class="separator:gaf30f5f63600dcbdbca7d2194c9a85be6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8b6517ab04af71c8b71ac2133219f35b"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga8b6517ab04af71c8b71ac2133219f35b">parseModelNumber</a> (char *productName)</td></tr>
<tr class="memdesc:ga8b6517ab04af71c8b71ac2133219f35b"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Model Number register.  <a href="group__uart_ascii_response_parsers.html#ga8b6517ab04af71c8b71ac2133219f35b">More...</a><br /></td></tr>
<tr class="separator:ga8b6517ab04af71c8b71ac2133219f35b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad960f165c98722b1163d982cb79dba75"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gad960f165c98722b1163d982cb79dba75">parseHardwareRevision</a> (uint32_t *revision)</td></tr>
<tr class="memdesc:gad960f165c98722b1163d982cb79dba75"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Hardware Revision register.  <a href="group__uart_ascii_response_parsers.html#gad960f165c98722b1163d982cb79dba75">More...</a><br /></td></tr>
<tr class="separator:gad960f165c98722b1163d982cb79dba75"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad57be58cc193cd936fdb1ddca8fb735a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gad57be58cc193cd936fdb1ddca8fb735a">parseSerialNumber</a> (uint32_t *serialNum)</td></tr>
<tr class="memdesc:gad57be58cc193cd936fdb1ddca8fb735a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Serial Number register.  <a href="group__uart_ascii_response_parsers.html#gad57be58cc193cd936fdb1ddca8fb735a">More...</a><br /></td></tr>
<tr class="separator:gad57be58cc193cd936fdb1ddca8fb735a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga599515b574b7daa687862775476d1c9f"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga599515b574b7daa687862775476d1c9f">parseFirmwareVersion</a> (char *firmwareVersion)</td></tr>
<tr class="memdesc:ga599515b574b7daa687862775476d1c9f"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Firmware Version register.  <a href="group__uart_ascii_response_parsers.html#ga599515b574b7daa687862775476d1c9f">More...</a><br /></td></tr>
<tr class="separator:ga599515b574b7daa687862775476d1c9f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1cc9fbf164fab661a2d6ab0ab7d631e4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga1cc9fbf164fab661a2d6ab0ab7d631e4">parseSerialBaudRate</a> (uint32_t *baudrate)</td></tr>
<tr class="memdesc:ga1cc9fbf164fab661a2d6ab0ab7d631e4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Serial Baud Rate register.  <a href="group__uart_ascii_response_parsers.html#ga1cc9fbf164fab661a2d6ab0ab7d631e4">More...</a><br /></td></tr>
<tr class="separator:ga1cc9fbf164fab661a2d6ab0ab7d631e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga149948fb0a8889d48d29136eab152344"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga149948fb0a8889d48d29136eab152344">parseAsyncDataOutputType</a> (uint32_t *ador)</td></tr>
<tr class="memdesc:ga149948fb0a8889d48d29136eab152344"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Async Data Output Type register.  <a href="group__uart_ascii_response_parsers.html#ga149948fb0a8889d48d29136eab152344">More...</a><br /></td></tr>
<tr class="separator:ga149948fb0a8889d48d29136eab152344"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gabf6b21b86d05b6b6c59f3a1fd7b245a7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gabf6b21b86d05b6b6c59f3a1fd7b245a7">parseAsyncDataOutputFrequency</a> (uint32_t *adof)</td></tr>
<tr class="memdesc:gabf6b21b86d05b6b6c59f3a1fd7b245a7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Async Data Output Frequency register.  <a href="group__uart_ascii_response_parsers.html#gabf6b21b86d05b6b6c59f3a1fd7b245a7">More...</a><br /></td></tr>
<tr class="separator:gabf6b21b86d05b6b6c59f3a1fd7b245a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga02cb6710c3aebf5bcd985408cf409504"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga02cb6710c3aebf5bcd985408cf409504">parseYawPitchRoll</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *yawPitchRoll)</td></tr>
<tr class="memdesc:ga02cb6710c3aebf5bcd985408cf409504"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Yaw Pitch Roll register.  <a href="group__uart_ascii_response_parsers.html#ga02cb6710c3aebf5bcd985408cf409504">More...</a><br /></td></tr>
<tr class="separator:ga02cb6710c3aebf5bcd985408cf409504"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga55c7cb73e5d1640c66918bd533405197"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga55c7cb73e5d1640c66918bd533405197">parseAttitudeQuaternion</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec4f</a> *quat)</td></tr>
<tr class="memdesc:ga55c7cb73e5d1640c66918bd533405197"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Attitude Quaternion register.  <a href="group__uart_ascii_response_parsers.html#ga55c7cb73e5d1640c66918bd533405197">More...</a><br /></td></tr>
<tr class="separator:ga55c7cb73e5d1640c66918bd533405197"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab7e91e6e84b399b064668f75d6229498"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gab7e91e6e84b399b064668f75d6229498">parseQuaternionMagneticAccelerationAndAngularRates</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec4f</a> *quat, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *mag, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accel, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *gyro)</td></tr>
<tr class="memdesc:gab7e91e6e84b399b064668f75d6229498"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Quaternion, Magnetic, Acceleration and Angular Rates register.  <a href="group__uart_ascii_response_parsers.html#gab7e91e6e84b399b064668f75d6229498">More...</a><br /></td></tr>
<tr class="separator:gab7e91e6e84b399b064668f75d6229498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad8e93f2efb49db70dff1b0df6112c636"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gad8e93f2efb49db70dff1b0df6112c636">parseMagneticMeasurements</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *mag)</td></tr>
<tr class="memdesc:gad8e93f2efb49db70dff1b0df6112c636"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Magnetic Measurements register.  <a href="group__uart_ascii_response_parsers.html#gad8e93f2efb49db70dff1b0df6112c636">More...</a><br /></td></tr>
<tr class="separator:gad8e93f2efb49db70dff1b0df6112c636"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ba58149be5f09540eac04b34e8be9d9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga0ba58149be5f09540eac04b34e8be9d9">parseAccelerationMeasurements</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accel)</td></tr>
<tr class="memdesc:ga0ba58149be5f09540eac04b34e8be9d9"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Acceleration Measurements register.  <a href="group__uart_ascii_response_parsers.html#ga0ba58149be5f09540eac04b34e8be9d9">More...</a><br /></td></tr>
<tr class="separator:ga0ba58149be5f09540eac04b34e8be9d9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gac690333651751fae8add199e7053384a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gac690333651751fae8add199e7053384a">parseAngularRateMeasurements</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *gyro)</td></tr>
<tr class="memdesc:gac690333651751fae8add199e7053384a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Angular Rate Measurements register.  <a href="group__uart_ascii_response_parsers.html#gac690333651751fae8add199e7053384a">More...</a><br /></td></tr>
<tr class="separator:gac690333651751fae8add199e7053384a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0ca83500e6d8773919a97ad041690dd3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga0ca83500e6d8773919a97ad041690dd3">parseMagneticAccelerationAndAngularRates</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *mag, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accel, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *gyro)</td></tr>
<tr class="memdesc:ga0ca83500e6d8773919a97ad041690dd3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Magnetic, Acceleration and Angular Rates register.  <a href="group__uart_ascii_response_parsers.html#ga0ca83500e6d8773919a97ad041690dd3">More...</a><br /></td></tr>
<tr class="separator:ga0ca83500e6d8773919a97ad041690dd3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2ef267193feec1cd6c99459fb97b1b7"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gad2ef267193feec1cd6c99459fb97b1b7">parseMagneticAndGravityReferenceVectors</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *magRef, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accRef)</td></tr>
<tr class="memdesc:gad2ef267193feec1cd6c99459fb97b1b7"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Magnetic and Gravity Reference Vectors register.  <a href="group__uart_ascii_response_parsers.html#gad2ef267193feec1cd6c99459fb97b1b7">More...</a><br /></td></tr>
<tr class="separator:gad2ef267193feec1cd6c99459fb97b1b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga629172abdebf3e50813369f80eb45e5a"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga629172abdebf3e50813369f80eb45e5a">parseFilterMeasurementsVarianceParameters</a> (float *angularWalkVariance, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *angularRateVariance, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *magneticVariance, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accelerationVariance)</td></tr>
<tr class="memdesc:ga629172abdebf3e50813369f80eb45e5a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Filter Measurements Variance Parameters register.  <a href="group__uart_ascii_response_parsers.html#ga629172abdebf3e50813369f80eb45e5a">More...</a><br /></td></tr>
<tr class="separator:ga629172abdebf3e50813369f80eb45e5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga9dce6c3bb3681d8d24bb5472842610a8"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga9dce6c3bb3681d8d24bb5472842610a8">parseMagnetometerCompensation</a> (<a class="el" href="structvn_1_1math_1_1mat.html">vn::math::mat3f</a> *c, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *b)</td></tr>
<tr class="memdesc:ga9dce6c3bb3681d8d24bb5472842610a8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Magnetometer Compensation register.  <a href="group__uart_ascii_response_parsers.html#ga9dce6c3bb3681d8d24bb5472842610a8">More...</a><br /></td></tr>
<tr class="separator:ga9dce6c3bb3681d8d24bb5472842610a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8248bee4a19e1ddcf5dadc36075ed3da"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga8248bee4a19e1ddcf5dadc36075ed3da">parseFilterActiveTuningParameters</a> (float *magneticDisturbanceGain, float *accelerationDisturbanceGain, float *magneticDisturbanceMemory, float *accelerationDisturbanceMemory)</td></tr>
<tr class="memdesc:ga8248bee4a19e1ddcf5dadc36075ed3da"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Filter Active Tuning Parameters register.  <a href="group__uart_ascii_response_parsers.html#ga8248bee4a19e1ddcf5dadc36075ed3da">More...</a><br /></td></tr>
<tr class="separator:ga8248bee4a19e1ddcf5dadc36075ed3da"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3c9ae3ce022b554e8533fc7a33cc25a4"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga3c9ae3ce022b554e8533fc7a33cc25a4">parseAccelerationCompensation</a> (<a class="el" href="structvn_1_1math_1_1mat.html">vn::math::mat3f</a> *c, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *b)</td></tr>
<tr class="memdesc:ga3c9ae3ce022b554e8533fc7a33cc25a4"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Acceleration Compensation register.  <a href="group__uart_ascii_response_parsers.html#ga3c9ae3ce022b554e8533fc7a33cc25a4">More...</a><br /></td></tr>
<tr class="separator:ga3c9ae3ce022b554e8533fc7a33cc25a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga235d32c13648f13aff3c3c6a9fadb131"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga235d32c13648f13aff3c3c6a9fadb131">parseReferenceFrameRotation</a> (<a class="el" href="structvn_1_1math_1_1mat.html">vn::math::mat3f</a> *c)</td></tr>
<tr class="memdesc:ga235d32c13648f13aff3c3c6a9fadb131"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Reference Frame Rotation register.  <a href="group__uart_ascii_response_parsers.html#ga235d32c13648f13aff3c3c6a9fadb131">More...</a><br /></td></tr>
<tr class="separator:ga235d32c13648f13aff3c3c6a9fadb131"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga41361d79552b4549c04a78b81827bdc6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga41361d79552b4549c04a78b81827bdc6">parseYawPitchRollMagneticAccelerationAndAngularRates</a> (<a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *yawPitchRoll, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *mag, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *accel, <a class="el" href="structvn_1_1math_1_1vec.html">vn::math::vec3f</a> *gyro)</td></tr>
<tr class="memdesc:ga41361d79552b4549c04a78b81827bdc6"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Yaw, Pitch, Roll, Magnetic, Acceleration and Angular Rates register.  <a href="group__uart_ascii_response_parsers.html#ga41361d79552b4549c04a78b81827bdc6">More...</a><br /></td></tr>
<tr class="separator:ga41361d79552b4549c04a78b81827bdc6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga586bd8f6a4b13a2cb98952b857832f10"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga586bd8f6a4b13a2cb98952b857832f10">parseCommunicationProtocolControl</a> (uint8_t *serialCount, uint8_t *serialStatus, uint8_t *spiCount, uint8_t *spiStatus, uint8_t *serialChecksum, uint8_t *spiChecksum, uint8_t *errorMode)</td></tr>
<tr class="memdesc:ga586bd8f6a4b13a2cb98952b857832f10"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Communication Protocol Control register.  <a href="group__uart_ascii_response_parsers.html#ga586bd8f6a4b13a2cb98952b857832f10">More...</a><br /></td></tr>
<tr class="separator:ga586bd8f6a4b13a2cb98952b857832f10"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaa349c7139cf369d347275d0eccbbe6c3"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#gaa349c7139cf369d347275d0eccbbe6c3">parseSynchronizationControl</a> (uint8_t *syncInMode, uint8_t *syncInEdge, uint16_t *syncInSkipFactor, uint8_t *syncOutMode, uint8_t *syncOutPolarity, uint16_t *syncOutSkipFactor, uint32_t *syncOutPulseWidth)</td></tr>
<tr class="memdesc:gaa349c7139cf369d347275d0eccbbe6c3"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Synchronization Control register.  <a href="group__uart_ascii_response_parsers.html#gaa349c7139cf369d347275d0eccbbe6c3">More...</a><br /></td></tr>
<tr class="separator:gaa349c7139cf369d347275d0eccbbe6c3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga8a9fcb329cda6c82aeaff81a586abd6e"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__uart_ascii_response_parsers.html#ga8a9fcb329cda6c82aeaff81a586abd6e">parseSynchronizationStatus</a> (uint32_t *syncInCount, uint32_t *syncInTime, uint32_t *syncOutCount)</td></tr>
<tr class="memdesc:ga8a9fcb329cda6c82aeaff81a586abd6e"><td class="mdescLeft">&#160;</td><td class="mdescRight">Parses a response from reading the Synchronization Status register.  <a href="group__uart_ascii_response_parsers.html#ga8a9fcb329cda6c82aeaf